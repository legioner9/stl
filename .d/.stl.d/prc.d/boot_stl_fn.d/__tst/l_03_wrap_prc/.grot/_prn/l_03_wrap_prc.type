l_03_wrap_prc — это функция
l_03_wrap_prc () 
{ 
    if [[ "-h" == "$1" ]]; then
        echo -e "
MAIN: ${FNN} :: 
TAGS:
\$1 
[, \$2]
CNTL: 
    -h : help
    _go : edit body      : l_02_edit ${fn_nm}
    ${FNN}
";
        cd "${PPWD}" || { 
            echo -e "${ECHO_RET1}'$FNN() $*' in file://${file_name} , line=${LINENO} :: NOT_DIR [{PPWD}] '${PPWD}' return 1${NRM}" 1>&2;
            return 1
        };
        return 0;
    fi;
    echo -e "${ECHO_EXEC}'$FNN $*'${NRM}";
    local FNN=$(l_01_prs_f -n "${1}");
    local PPWD=$PWD;
    local ARGSW=("$@");
    local ARGS=("${ARGSW[@]:1}");
    local NARGS=$(($# - 1));
    local verbose=0;
    local estat=;
    local file_name=${STL_D_PATH}/prc.d/boot_stl_fn.d/${FNN}.sh;
    if ! [[ -d "${PPWD}" ]]; then
        echo -e "${ECHO_RET1}'$FNN() $*' in file://${file_name} , line=${LINENO} :: NOT_DIR [{PPWD}] '${PPWD}' return 1${NRM}" 1>&2;
        return 1;
    fi;
    if [[ "_e" == "$1" ]]; then
        l_02_edit ${file_name};
        return 0;
    fi;
    if ! [[ -d ${PPWD} ]]; then
        l_00_echo_ret1 "in fs= file://${sh_file} , line=${LINENO}, ${FNN}() : \${PWD} NOT_DIR : 'file://${PPWD}' : ${hint} : return 1";
        return 1;
    fi;
    local fn_sh_grot=$(dirname "${1}");
    local fn_sh_file="${fn_sh_grot}/${FNN}.prc";
    local fn_hie_file="${fn_sh_grot}/${FNN}.hie";
    local d_name=$(dirname ${fn_sh_file});
    local sublib_pth=$(dirname $(dirname ${d_name}));
    local sublib_pfx=$(l_01_prs_f -e2 ${sublib_pth});
    local sublib_num=$(l_01_prs_f -n2 ${sublib_pth});
    local sublib_nm=$(l_01_prs_f -ne ${sublib_pth});
    local d_data_ram=${STL_DATA_D_PATH}/${sublib_num}.${sublib_pfx}.arb/${FNN}.ram;
    local d_lib_ram=${STL_LIB_D_PATH}/${sublib_num}.${sublib_pfx}.arb/${FNN}.ram;
    local d_data_grot=${d_data_ram}/.grot;
    local d_lib_grot=${d_lib_ram}/.grot;
    local d_lib_grot_opt=${d_lib_grot}/.opt;
    local d_lib_grot_opt_lst=${d_lib_grot_opt}.lst;
    local d_lib_grot_opt_prc=${d_lib_grot_opt}.prc;
    local d_lib_grot_opt_tml=${d_lib_grot_opt}.tml;
    local d_lib_grot_depo=${d_lib_grot}/.depo;
    if [ -n "$2" ] && [[ "_go" == "$2" ]]; then
        l_02_edit "${fn_sh_file}";
        return 0;
    fi;
    if [ -n "$2" ] && [[ "_tst" == "$2" ]]; then
        if ! . ${d_name}/_tst/exec.tst; then
            l_00_echo_ret1 "in fs= file:// , line=${LINENO}, EXEC: ${FNN} $* : : EXEC_FAIL : '. ${d_name}/_tst/exec.tst' : ${hint} : return 1" 1>&2;
            cd $PPWD;
            return 1;
        fi;
        return 0;
    fi;
    if [ -n "$2" ] && [[ "_tst_e" == "$2" ]]; then
        l_02_edit ${d_name}/_tst;
        return 0;
    fi;
    if [ -n "$2" ] && [[ "_depo_d_e" == "$2" ]]; then
        l_02_edit ${d_lib_grot_depo};
        return 0;
    fi;
    if [ -n "$2" ] && [[ "_opt_d_e" == "$2" ]]; then
        l_02_edit $d_lib_grot_opt;
        return 0;
    fi;
    if [ -n "$2" ] && [[ "_flow_1" == "$2" ]]; then
        if ! . ${d_name}/_tst/_flow_tst.sh.v1; then
            l_00_echo_ret1 "in fs= file://${fn_sh_file} , line=${LINENO}, EXEC: ${FNN} $* : : EXEC_FAIL : '_source_w1_isf ${d_name}/_tst/_flow_tst.sh.v1' : ${hint} : return 1" 1>&2;
            cd $PPWD;
            return 1;
        fi;
        return 0;
    fi;
    if [ -n "$2" ] && [[ "_hie_m" == "$2" ]]; then
        more ${fn_hie_file};
        cd $PPWD;
        return 0;
    fi;
    if [ -n "$2" ] && [[ "_hie_e" == "$2" ]]; then
        l_02_edit ${fn_hie_file};
        cd $PPWD;
        return 0;
    fi;
    local di=;
    if [ -n "$N" ]; then
        if [ "$N" == "_i" ]; then
            di=1;
        else
            di=0;
        fi;
    else
        di=0;
    fi;
    . ${ARGSW[@]};
    cd "$PPWD" || echo -e "${ECHO_WARN}in fs= file://${fn_nm} , line=${LINENO} , EXEC_FAIL : 'cd $PPWD' : continue${NRM}";
    return 0
}
